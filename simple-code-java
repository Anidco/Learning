### Java tips, tricks and sample code ###

In this part of the sample Java code article, we will introduce some important tips and tricks that you should follow in the initial stages of learning this language.


-Return an empty collection instead of {Null}

#If a program returns a collection that has no values, you must ensure that an empty collection is returned, not {Null}.
This way you don't have to run a lot of {ifâ€¦else} code on {Null} elements.

*Example:

public class getLocationName {
    return (null==cityName ? "": cityName);
}


-Use strings carefully

#If two strings are concatenated using the (+) operator in a {for} loop, a new String Object is created each time.
This will waste memory and reduce time performance. 
Also, when instantiating the string object, you should not use constructors and this instantiation should be done directly.

*Consider the following example:

  //Slower Instantiation
  String bad = new String("Yet another string object");
      
  //Faster Instantiation
  String good = "Yet another string object"


-Avoid creating unnecessary objects

#One of the most expensive types of operations in terms of memory consumption in Java is the object creation operation. 
Therefore, it is recommended that objects be built or instantiated only when necessary.

*You can see an example of this in the code below:

  import java.util.ArrayList;
  import java.util.List;
 
  public class Employees {
 
      private List Employees;
 
      public List getEmployees() {
 
          //initialize only when required
          if(null == Employees) {
              Employees = new ArrayList();
          }
          return Employees;
      }
  }


-The difficult problem of choosing "Array" or "ArrayList"

#Often, developers are confused about choosing between "Array" and "ArrayList" data structures. 
Both of these cases have their own strengths and weaknesses. 
Choosing one of these two in practice depends on your requirements.
