    **Primary Sitting

1:First, we display some primary information about the calculator:
	
  System.out.println("---------------------------------- \n" +
  "Welcome to Basic Calculator \n" +
  "----------------------------------");
  System.out.println("Following operations are supported : \n" +
  "1. Addition (+) \n" +
  "2. Subtraction (-) \n" +
  "3. Multiplication (*) \n" +
  "4. Division (/) \n");

2:Then we use java.util.Scanner to capture user input:

Scanner scanner = new Scanner(System.in);
 
System.out.println("Enter an operator: (+ OR - OR * OR /) ");
char operation = scanner.next().charAt(0);
 
System.out.println("Enter the first number: ");
double num1 = scanner.nextDouble();
 
System.out.println("Enter the second number: ");
double num2 = scanner.nextDouble();

3:When we give inputs to the system, we must first validate them. 
For example, if the entry is not one of +, -, Ã— or /, our calculator will show an incorrect entry. 
Similarly, if we enter the second number to divide by 0, it will give a good result. 
So we implement validations. 
First, on the position where the operator is invalid:

if (!(operation == '+' || operation == '-' || operation == '*' || operation == '/')) {
    System.err.println("Invalid Operator. Please use only + or - or * or /");
}


4:We can then display errors for invalid operations:

if (operation == '/' && num2 == 0.0) {
    System.err.println("The second number cannot be zero for division operation.");
}


5:User's input is first validated. Then the calculation result is displayed as follows:

<number1> <operation> <number2> = <result>


  *Processing calculations

1:First of all, we can use the if-else structure to process calculations:

if (operation == '+') {
    System.out.println(num1 + " + " + num2 + " = " + (num1 + num2));
} else if (operation == '-') {
    System.out.println(num1 + " - " + num2 + " = " + (num1 - num2));
} else if (operation == '*') {
    System.out.println(num1 + " x " + num2 + " = " + (num1 * num2));
} else if (operation == '/') {
    System.out.println(num1 + " / " + num2 + " = " + (num1 / num2));
} else {
    System.err.println("Invalid Operator Specified.");
}

2:Similarly, we can use a Java switch statement:

switch (operation) {
    case '+':
        System.out.println(num1 + " + " + num2 + " = " + (num1 + num2));
        break;
    case '-':
        System.out.println(num1 + " - " + num2 + " = " + (num1 - num2));
        break;
    case '*':
        System.out.println(num1 + " x " + num2 + " = " + (num1 * num2));
        break;
    case '/':
        System.out.println(num1 + " / " + num2 + " = " + (num1 / num2));
        break;
    default:
        System.err.println("Invalid Operator Specified.");
        break;
}

We can use a variable to store the result of calculations. 
As a result, we can display it at the end. 
In this case, we use System.out.println only once. 
In addition, the maximum interval for calculation is 2147483647.
As a result, if we exceed this value, the int data type will overflow. 
Therefore, we must store the variable in a larger data type, for example, in the double data type.

### At the end ###
In this guide, we implemented a simple Java calculator using two different constructs.
We also made sure that the inputs are validated before running the processes and calculations. 
I hope it helps!
